演示5.2：对#1进程的变量mynext的第一次写操作
分析对象：版本1.5内核

本实验用到的命令汇总：
--------------------------------------------------------------
nudt@uvm:~/os/linux-0.11-lab$ ./rundbg
<bochs:1> b 0x699f
<bochs:2> c
<bochs:3> u/8
<bochs:4> b 0x69b8
<bochs:5> c
<bochs:6> sreg    
<bochs:7> x/wx 0x401fcac
<bochs:8> x/17wx 0
<bochs:9> x/32wx 0xffe000
<bochs:10> xp/wx 0x1fcac
<bochs:11> info tab
<bochs:12> s
<bochs:13> u/26
<bochs:14> b 0xb1fe
<bochs:15> c
<bochs:16> x/32wx 0xffe000
<bochs:17> x/16wx 0xffc000
<bochs:18> x/1024wx 0x1f000
<bochs:19> s
<bochs:20> info tab
<bochs:21> s
<bochs:22> xp/wx 0xffccac
<bochs:23> xp/wx 0x1fcac
<bochs:25> 


调试过程：
--------------------------------------------------------------
nudt@uvm:~/os/linux-0.11-lab$ ./rundbg
========================================================================
                       Bochs x86 Emulator 2.6.9
               Built from SVN snapshot on April 9, 2017
                  Compiled on Apr 24 2020 at 16:32:41
========================================================================
00000000000i[      ] BXSHARE not set. using compile time default '/usr/local/share/bochs'
00000000000i[      ] reading configuration from conf/0.11.bxrc
00000000000i[      ] installing x module as the Bochs GUI
00000000000i[      ] using log file bochsout.txt
Next at t=0
(0) [0x0000fffffff0] f000:fff0 (unk. ctxt): jmpf 0xf000:e05b          ; ea5be000f0

//跟踪到第一次写#1进程的变量mynext
<bochs:1> b 0x699f

<bochs:2> c
(0) Breakpoint 1, 0x0400699f in ?? ()
Next at t=116317714
(0) [0x00000000699f] 000f:0000699f (unk. ctxt): mov eax, dword ptr ds:0x0001fcac ; a1acfc0100

<bochs:3> u/8
0400699f: (                    ): mov eax, dword ptr ds:0x0001fcac ; a1acfc0100
040069a4: (                    ): add eax, 0x00000041       ; 83c041
040069a7: (                    ): movsx eax, al             ; 0fbec0
040069aa: (                    ): mov dword ptr ss:[esp], eax ; 890424
040069ad: (                    ): call .+4197               ; e865100000
040069b2: (                    ): mov eax, dword ptr ds:0x0001fcac ; a1acfc0100
040069b7: (                    ): inc eax                   ; 40
040069b8: (                    ): mov dword ptr ds:0x0001fcac, eax ; a3acfc0100

<bochs:4> b 0x69b8

<bochs:5> c
(0) Breakpoint 2, 0x040069b8 in ?? ()
Next at t=116514500
(0) [0x0000000069b8] 000f:000069b8 (unk. ctxt): mov dword ptr ds:0x0001fcac, eax ; a3acfc0100
  此即为第一次写mynext

//计算该变量的线性地址
<bochs:6> sreg    
es:0x0017, dh=0x04c0f300, dl=0x0000009f, valid=1
	Data segment, base=0x04000000, limit=0x0009ffff, Read/Write, Accessed
cs:0x000f, dh=0x04c0fb00, dl=0x0000009f, valid=1
	Code segment, base=0x04000000, limit=0x0009ffff, Execute/Read, Non-Conforming, Accessed, 32-bit
ss:0x0017, dh=0x04c0f300, dl=0x0000009f, valid=1
	Data segment, base=0x04000000, limit=0x0009ffff, Read/Write, Accessed
ds:0x0017, dh=0x04c0f300, dl=0x0000009f, valid=3
	Data segment, base=0x04000000, limit=0x0009ffff, Read/Write, Accessed
fs:0x0017, dh=0x04c0f300, dl=0x0000009f, valid=1
	Data segment, base=0x04000000, limit=0x0009ffff, Read/Write, Accessed
gs:0x0017, dh=0x04c0f300, dl=0x0000009f, valid=1
	Data segment, base=0x04000000, limit=0x0009ffff, Read/Write, Accessed
ldtr:0x0038, dh=0x000082ff, dl=0xf2d00068, valid=1
tr:0x0030, dh=0x00008bff, dl=0xf2e80068, valid=1
gdtr:base=0x00005cc0, limit=0x7ff
idtr:base=0x000054c0, limit=0x7ff
  ds的段基址为0x4000000，因此mynext的线性地址为0x401fcac

<bochs:7> x/wx 0x401fcac
[bochs]:
0x0401fcac <bogus+       0>:	0x00000001
  此为mynext的当前值

//计算mynext的物理地址
<bochs:8> x/17wx 0
[bochs]:
0x00000000 <bogus+       0>:	0x00001027	0x00002007	0x00003007	0x00004027
0x00000010 <bogus+      16>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00000020 <bogus+      32>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00000030 <bogus+      48>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00000040 <bogus+      64>:	0x00ffe027
  可见对应的2级页表首地址为0xffe000

<bochs:9> x/32wx 0xffe000
[bochs]:
0x00ffe000 <bogus+       0>:	0x00000065	0x00001025	0x00002005	0x00003005
0x00ffe010 <bogus+      16>:	0x00004005	0x00005065	0x00006065	0x00007025
0x00ffe020 <bogus+      32>:	0x00008025	0x00009005	0x0000a025	0x0000b025
0x00ffe030 <bogus+      48>:	0x0000c005	0x0000d025	0x0000e005	0x0000f005
0x00ffe040 <bogus+      64>:	0x00010005	0x00011005	0x00012025	0x00013025
0x00ffe050 <bogus+      80>:	0x00014025	0x00015025	0x00016025	0x00017025
0x00ffe060 <bogus+      96>:	0x00018005	0x00019025	0x0001a005	0x0001b025
0x00ffe070 <bogus+     112>:	0x0001c065	0x0001d065	0x0001e025	0x0001f065
  可见对应页帧的首地址为0x1f000，因此mynext目前对应到物理地址0x1fcac，但当前此页面只能读、不能写。

<bochs:10> xp/wx 0x1fcac
[bochs]:
0x0001fcac <bogus+       0>:	0x00000001
  此为mynext的当前位置和值

//查看整个线性地址空间当前的映射情况
<bochs:11> info tab
cr3: 0x000000000000
0x00000000-0x00ffffff -> 0x000000000000-0x000000ffffff
0x04000000-0x04021fff -> 0x000000000000-0x000000021fff
0x04022000-0x04022fff -> 0x000000ffd000-0x000000ffdfff
0x04023000-0x0409ffff -> 0x000000023000-0x00000009ffff
  可见当前只有页面0x4022被映射到了页帧0xffd，从64M开始的其他页面还是映射到减去64M之后的页帧。

//现在执行写操作
<bochs:12> s
Next at t=116514501
(0) [0x00000000b1c8] 0008:0000b1c8 (unk. ctxt): xchg dword ptr ss:[esp], eax ; 870424
  发生了页故障（一种异常），跳到了页故障的处理程序，可以确认地址如下：

//{-----------另开一个窗口，查看地址0xb1c8对应的函数
nudt@uvm:~/os/linux-0.11-lab/1.5/linux$ cat System.map | grep b1c8
0000b1c8 T page_fault
//}

//查看页故障处理程序的代码
<bochs:13> u/26
0000b1c8: (                    ): xchg dword ptr ss:[esp], eax ; 870424
0000b1cb: (                    ): push ecx                  ; 51
0000b1cc: (                    ): push edx                  ; 52
0000b1cd: (                    ): push ds                   ; 1e
0000b1ce: (                    ): push es                   ; 06
0000b1cf: (                    ): push fs                   ; 0fa0
0000b1d1: (                    ): mov edx, 0x00000010       ; ba10000000
0000b1d6: (                    ): mov ds, dx                ; 8eda
0000b1d8: (                    ): mov es, dx                ; 8ec2
0000b1da: (                    ): mov fs, dx                ; 8ee2
0000b1dc: (                    ): mov edx, cr2              ; 0f20d2
0000b1df: (                    ): push edx                  ; 52
0000b1e0: (                    ): push eax                  ; 50
0000b1e1: (                    ): test eax, 0x00000001      ; a901000000
0000b1e6: (                    ): jnz .+7                   ; 7507
0000b1e8: (                    ): call .-752                ; e810fdffff
0000b1ed: (                    ): jmp .+5                   ; eb05
0000b1ef: (                    ): call .-1544               ; e8f8f9ffff
0000b1f4: (                    ): add esp, 0x00000008       ; 83c408
0000b1f7: (                    ): pop fs                    ; 0fa1
0000b1f9: (                    ): pop es                    ; 07
0000b1fa: (                    ): pop ds                    ; 1f
0000b1fb: (                    ): pop edx                   ; 5a
0000b1fc: (                    ): pop ecx                   ; 59
0000b1fd: (                    ): pop eax                   ; 58
0000b1fe: (                    ): iret                      ; cf

//跟踪到页故障处理结束
<bochs:14> b 0xb1fe

<bochs:15> c
(0) Breakpoint 3, 0x0000b1fe in ?? ()
Next at t=116516643
(0) [0x00000000b1fe] 0008:0000b1fe (unk. ctxt): iret                      ; cf

//再次查看此时变量mynext对应的页表项
<bochs:16> x/32wx 0xffe000
[bochs]:
0x00ffe000 <bogus+       0>:	0x00000065	0x00001025	0x00002005	0x00003005
0x00ffe010 <bogus+      16>:	0x00004005	0x00005065	0x00006065	0x00007025
0x00ffe020 <bogus+      32>:	0x00008025	0x00009005	0x0000a025	0x0000b025
0x00ffe030 <bogus+      48>:	0x0000c005	0x0000d025	0x0000e005	0x0000f005
0x00ffe040 <bogus+      64>:	0x00010005	0x00011005	0x00012025	0x00013025
0x00ffe050 <bogus+      80>:	0x00014025	0x00015025	0x00016025	0x00017025
0x00ffe060 <bogus+      96>:	0x00018005	0x00019025	0x0001a005	0x0001b025
0x00ffe070 <bogus+     112>:	0x0001c065	0x0001d065	0x0001e025	0x00ffc007
  可见页表项已被修改，指向了新的页帧0xffc，此时已完成写时复制，且变为了可写（7）。

//查看新页帧的内容
<bochs:17> x/16wx 0xffc000
[bochs]:
0x00ffc000 <bogus+       0>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00ffc010 <bogus+      16>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00ffc020 <bogus+      32>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00ffc030 <bogus+      48>:	0x00000000	0x00000000	0x00000000	0x00000000
............
0x00ffc730 <bogus+    1840>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00ffc740 <bogus+    1856>:	0x0001d250	0x0001d660	0x0001deb0	0x0001e2c0
0x00ffc750 <bogus+    1872>:	0x0001eb10	0x0001ef20	0x00000007	0x00000000
0x00ffc760 <bogus+    1888>:	0x09000000	0x04170600	0x03000359	0x01800240
0x00ffc770 <bogus+    1904>:	0x006000c0	0x00300040	0x000c0018	0x00030006
0x00ffc780 <bogus+    1920>:	0x08080800	0x08080808	0x28280808	0x08282828
0x00ffc790 <bogus+    1936>:	0x08080808	0x08080808	0x08080808	0x08080808
0x00ffc7a0 <bogus+    1952>:	0x1010a008	0x10101010	0x10101010	0x10101010
0x00ffc7b0 <bogus+    1968>:	0x04040410	0x04040404	0x10040404	0x10101010
0x00ffc7c0 <bogus+    1984>:	0x41411010	0x41414141	0x01010101	0x01010101
0x00ffc7d0 <bogus+    2000>:	0x01010101	0x01010101	0x01010101	0x10101010
0x00ffc7e0 <bogus+    2016>:	0x42421010	0x42424242	0x02020202	0x02020202
0x00ffc7f0 <bogus+    2032>:	0x02020202	0x02020202	0x02020202	0x10101010
0x00ffc800 <bogus+    2048>:	0x00000008	0x00000000	0x00000000	0x00000000
0x00ffc810 <bogus+    2064>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00ffc820 <bogus+    2080>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00ffc830 <bogus+    2096>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00ffc840 <bogus+    2112>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00ffc850 <bogus+    2128>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00ffc860 <bogus+    2144>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00ffc870 <bogus+    2160>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00ffc880 <bogus+    2176>:	0x43434700	0x5528203a	0x746e7562	0x2e342075
0x00ffc890 <bogus+    2192>:	0x2d342e38	0x75627532	0x3175746e	0x2e34317e
0x00ffc8a0 <bogus+    2208>:	0x20293430	0x2e382e34	0x2e000034	0x74736873
0x00ffc8b0 <bogus+    2224>:	0x62617472	0x65742e00	0x2e007478	0x61646f72
0x00ffc8c0 <bogus+    2240>:	0x2e006174	0x665f6865	0x656d6172	0x61642e00
0x00ffc8d0 <bogus+    2256>:	0x2e006174	0x00737362	0x6d6f632e	0x746e656d
0x00ffc8e0 <bogus+    2272>:	0xffffff00	0x00000000	0x00000000	0x00000000
0x00ffc8f0 <bogus+    2288>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00ffc900 <bogus+    2304>:	0x00000000	0x00000000	0x00000000	0x0000000b
0x00ffc910 <bogus+    2320>:	0x00000001	0x00000007	0x00000000	0x00000080
0x00ffc920 <bogus+    2336>:	0x00017f03	0x00000000	0x00000000	0x00000008
0x00ffc930 <bogus+    2352>:	0x00000000	0x00000011	0x00000001	0x00000002
0x00ffc940 <bogus+    2368>:	0x00017f04	0x00017f84	0x000013ca	0x00000000
0x00ffc950 <bogus+    2384>:	0x00000000	0x00000004	0x00000000	0x00000019
0x00ffc960 <bogus+    2400>:	0x00000001	0x00000002	0x000192d0	0x00019350
0x00ffc970 <bogus+    2416>:	0x00002aac	0x00000000	0x00000000	0x00000004
0x00ffc980 <bogus+    2432>:	0x00000000	0x00000023	0x00000001	0x00000003
0x00ffc990 <bogus+    2448>:	0x0001bd80	0x0001be00	0x00003b01	0x00000000
0x00ffc9a0 <bogus+    2464>:	0x00000000	0x00000020	0x00000000	0x00000029
0x00ffc9b0 <bogus+    2480>:	0x00000008	0x00000003	0x0001f8a0	0x0001f901
0x00ffc9c0 <bogus+    2496>:	0x000044b0	0x00000000	0x00000000	0x00000020
0x00ffc9d0 <bogus+    2512>:	0x00000000	0x0000002e	0x00000001	0x00000030
0x00ffc9e0 <bogus+    2528>:	0x00000000	0x0001f901	0x00000029	0x00000000
0x00ffc9f0 <bogus+    2544>:	0x00000000	0x00000001	0x00000001	0x00000001
0x00ffca00 <bogus+    2560>:	0x00000003	0x00000000	0x00000000	0x0001f92a
0x00ffca10 <bogus+    2576>:	0x00000037	0x00000000	0x00000000	0x00000001
0x00ffca20 <bogus+    2592>:	0x00000000	0x00000000	0x00000000	0x00000000
............
0x00ffcc80 <bogus+    3200>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00ffcc90 <bogus+    3216>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00ffcca0 <bogus+    3232>:	0x01000000	0x00400000	0x00400000	0x00000001
0x00ffccb0 <bogus+    3248>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00ffccc0 <bogus+    3264>:	0x00000003	0x5ea84beb	0x00000000	0x00000000
0x00ffccd0 <bogus+    3280>:	0x00000000	0x00000000	0x00000000	0x00000000
............
0x00ffcff0 <bogus+    4080>:	0x00000000	0x00000000	0x00000000	0x00000000

//查看旧页帧的内容
<bochs:18> x/1024wx 0x1f000
[bochs]:
0x0001f000 <bogus+       0>:	0x00000000	0x00000000	0x00000000	0x00000000
0x0001f010 <bogus+      16>:	0x00000000	0x00000000	0x00000000	0x00000000
0x0001f020 <bogus+      32>:	0x00000000	0x00000000	0x00000000	0x00000000
0x0001f030 <bogus+      48>:	0x00000000	0x00000000	0x00000000	0x00000000
............
0x0001f730 <bogus+    1840>:	0x00000000	0x00000000	0x00000000	0x00000000
0x0001f740 <bogus+    1856>:	0x0001d250	0x0001d660	0x0001deb0	0x0001e2c0
0x0001f750 <bogus+    1872>:	0x0001eb10	0x0001ef20	0x00000007	0x00000000
0x0001f760 <bogus+    1888>:	0x09000000	0x04170600	0x03000359	0x01800240
0x0001f770 <bogus+    1904>:	0x006000c0	0x00300040	0x000c0018	0x00030006
0x0001f780 <bogus+    1920>:	0x08080800	0x08080808	0x28280808	0x08282828
0x0001f790 <bogus+    1936>:	0x08080808	0x08080808	0x08080808	0x08080808
0x0001f7a0 <bogus+    1952>:	0x1010a008	0x10101010	0x10101010	0x10101010
0x0001f7b0 <bogus+    1968>:	0x04040410	0x04040404	0x10040404	0x10101010
0x0001f7c0 <bogus+    1984>:	0x41411010	0x41414141	0x01010101	0x01010101
0x0001f7d0 <bogus+    2000>:	0x01010101	0x01010101	0x01010101	0x10101010
0x0001f7e0 <bogus+    2016>:	0x42421010	0x42424242	0x02020202	0x02020202
0x0001f7f0 <bogus+    2032>:	0x02020202	0x02020202	0x02020202	0x10101010
0x0001f800 <bogus+    2048>:	0x00000008	0x00000000	0x00000000	0x00000000
0x0001f810 <bogus+    2064>:	0x00000000	0x00000000	0x00000000	0x00000000
0x0001f820 <bogus+    2080>:	0x00000000	0x00000000	0x00000000	0x00000000
0x0001f830 <bogus+    2096>:	0x00000000	0x00000000	0x00000000	0x00000000
0x0001f840 <bogus+    2112>:	0x00000000	0x00000000	0x00000000	0x00000000
0x0001f850 <bogus+    2128>:	0x00000000	0x00000000	0x00000000	0x00000000
0x0001f860 <bogus+    2144>:	0x00000000	0x00000000	0x00000000	0x00000000
0x0001f870 <bogus+    2160>:	0x00000000	0x00000000	0x00000000	0x00000000
0x0001f880 <bogus+    2176>:	0x43434700	0x5528203a	0x746e7562	0x2e342075
0x0001f890 <bogus+    2192>:	0x2d342e38	0x75627532	0x3175746e	0x2e34317e
0x0001f8a0 <bogus+    2208>:	0x20293430	0x2e382e34	0x2e000034	0x74736873
0x0001f8b0 <bogus+    2224>:	0x62617472	0x65742e00	0x2e007478	0x61646f72
0x0001f8c0 <bogus+    2240>:	0x2e006174	0x665f6865	0x656d6172	0x61642e00
0x0001f8d0 <bogus+    2256>:	0x2e006174	0x00737362	0x6d6f632e	0x746e656d
0x0001f8e0 <bogus+    2272>:	0xffffff00	0x00000000	0x00000000	0x00000000
0x0001f8f0 <bogus+    2288>:	0x00000000	0x00000000	0x00000000	0x00000000
0x0001f900 <bogus+    2304>:	0x00000000	0x00000000	0x00000000	0x0000000b
0x0001f910 <bogus+    2320>:	0x00000001	0x00000007	0x00000000	0x00000080
0x0001f920 <bogus+    2336>:	0x00017f03	0x00000000	0x00000000	0x00000008
0x0001f930 <bogus+    2352>:	0x00000000	0x00000011	0x00000001	0x00000002
0x0001f940 <bogus+    2368>:	0x00017f04	0x00017f84	0x000013ca	0x00000000
0x0001f950 <bogus+    2384>:	0x00000000	0x00000004	0x00000000	0x00000019
0x0001f960 <bogus+    2400>:	0x00000001	0x00000002	0x000192d0	0x00019350
0x0001f970 <bogus+    2416>:	0x00002aac	0x00000000	0x00000000	0x00000004
0x0001f980 <bogus+    2432>:	0x00000000	0x00000023	0x00000001	0x00000003
0x0001f990 <bogus+    2448>:	0x0001bd80	0x0001be00	0x00003b01	0x00000000
0x0001f9a0 <bogus+    2464>:	0x00000000	0x00000020	0x00000000	0x00000029
0x0001f9b0 <bogus+    2480>:	0x00000008	0x00000003	0x0001f8a0	0x0001f901
0x0001f9c0 <bogus+    2496>:	0x000044b0	0x00000000	0x00000000	0x00000020
0x0001f9d0 <bogus+    2512>:	0x00000000	0x0000002e	0x00000001	0x00000030
0x0001f9e0 <bogus+    2528>:	0x00000000	0x0001f901	0x00000029	0x00000000
0x0001f9f0 <bogus+    2544>:	0x00000000	0x00000001	0x00000001	0x00000001
0x0001fa00 <bogus+    2560>:	0x00000003	0x00000000	0x00000000	0x0001f92a
0x0001fa10 <bogus+    2576>:	0x00000037	0x00000000	0x00000000	0x00000001
0x0001fa20 <bogus+    2592>:	0x00000000	0x00000000	0x00000000	0x00000000
............
0x0001fc90 <bogus+    3216>:	0x00000000	0x00000000	0x00000000	0x00000000
0x0001fca0 <bogus+    3232>:	0x01000000	0x00400000	0x00400000	0x00000001
0x0001fcb0 <bogus+    3248>:	0x00000000	0x00000000	0x00000000	0x00000000
0x0001fcc0 <bogus+    3264>:	0x00000003	0x5ea84beb	0x00000000	0x00000000
0x0001fcd0 <bogus+    3280>:	0x00000000	0x00000000	0x00000000	0x00000000
............
0x0001fff0 <bogus+    4080>:	0x00000000	0x00000000	0x00000000	0x00000000

//对比可知，这两个页帧的内容是一样的，旧页帧的值被复制给了新页帧

//回到恢复点（与断点相同）
<bochs:19> s
Next at t=116516644
(0) [0x0000000069b8] 000f:000069b8 (unk. ctxt): mov dword ptr ds:0x0001fcac, eax ; a3acfc0100
  可见再次回到了引发页故障的指令，此时对应的页表项已经变为了可写。

//再次查看整个线性地址空间的映射情况
<bochs:20> info tab
cr3: 0x000000000000
0x00000000-0x00ffffff -> 0x000000000000-0x000000ffffff
0x04000000-0x0401efff -> 0x000000000000-0x00000001efff
0x0401f000-0x0401ffff -> 0x000000ffc000-0x000000ffcfff
0x04020000-0x04021fff -> 0x000000020000-0x000000021fff
0x04022000-0x04022fff -> 0x000000ffd000-0x000000ffdfff
0x04023000-0x0409ffff -> 0x000000023000-0x00000009ffff
  可见此时页面0x401f被改为映射到了页帧0xffc，其他不变。

//再次修改变量mynext
<bochs:21> s
Next at t=116516645
(0) [0x0000000069bd] 000f:000069bd (unk. ctxt): mov dword ptr ss:[esp+28], 0x00000001 ; c744241c01000000
  这次没有引发页故障了

//查看mynext的新值
<bochs:22> xp/wx 0xffccac
[bochs]:
0x00ffccac <bogus+       0>:	0x00000002

//查看原来位置的值
<bochs:23> xp/wx 0x1fcac
[bochs]:
0x0001fcac <bogus+       0>:	0x00000001
  没有被改

<bochs:25> 
